
Compiling
=========

You will need maven. Then, in the top folder of the checkout:

mvn clean install

or 

mvn clean install -Pquick  		# no tests


Eclipse
=======

We highly recommend using m2eclipse plugin and importing all projects directly
into Eclipse as Maven projects ("maven nature").


Compiling dictionaries
======================

A pipeline for compiling plain text dictionary data into automata:

1) Prepare tab-delimited input file with the following columns:
   inflected-form base-form annotation. An example:

niebabińscy     niebabiński     adj:pl:nom.voc:m1.p1:pos
niebabińska     niebabiński     adj:sg:nom.voc:f:pos
niebabiński     niebabiński     adj:sg:acc:m3:pos

2) The above tab-delimited input can be preprocessed
   to conflate shared affixes (helps in subsequent FSA compression):

java -jar morfologik-tools-*-standalone.jar tab2morph --coder INFIX --input ~/tmp/input.txt > intermediate.txt

3) Compile FSA from the intermediate format:

java -jar morfologik-tools-*-standalone.jar fsa_build --input intermediate.txt --progress > output.fsa

4) You should add output.info file specifying character encoding and additional 
   licensing information. See examples (Polish dictionaries).

More info:
http://languagetool.wikidot.com/developing-a-tagger-dictionary


Sonatype/ release push
======================

# snapshot deploy, create single-JAR version, javadocs, etc.
mvn clean deploy -Prelease

# ZIP with full release artifacts
mvn clean deploy -Prelease,distribution

# ZIP with full release artifacts for sourceforge.net
mvn clean install -Prelease,distribution

# For final releases, GPG sign.
mvn clean deploy -Prelease,distribution,sign
